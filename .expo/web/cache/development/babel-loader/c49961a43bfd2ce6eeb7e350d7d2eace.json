{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FlashcardView = function FlashcardView() {\n  var animatedValue = new Animated.Value(0);\n  var currentValue = 0;\n  animatedValue.addListener(function (_ref) {\n    var value = _ref.value;\n    currentValue = value;\n  });\n\n  var flipCard = function flipCard() {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        friction: 8,\n        tension: 10,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        friction: 8,\n        tension: 10,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n\n  var frontInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: [\"0deg\", \"180deg\"]\n  });\n  var backInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: [\"180deg\", \"360deg\"]\n  });\n\n  var Header = function Header() {\n    return _jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.titleStyle,\n        children: \"Vad blir\"\n      })\n    });\n  };\n\n  var BottomText = function BottomText() {\n    return _jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.titleStyle,\n        children: \"i kod?\"\n      })\n    });\n  };\n\n  var FlashcardContainer = function FlashcardContainer() {\n    return _jsx(View, {\n      style: styles.boxContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.touchStyle,\n        onPress: flipCard,\n        children: _jsxs(View, {\n          children: [_jsx(Animated.View, {\n            style: [styles.flashcardStyle, {\n              transform: [{\n                rotateY: frontInterpolate\n              }]\n            }],\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"This is the frontside\"\n            })\n          }), _jsx(Animated.View, {\n            style: [styles.flashcardStyle, styles.backsideStyle, {\n              transform: [{\n                rotateY: backInterpolate\n              }]\n            }],\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"This is the backside\"\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  var clickHandler = function clickHandler() {\n    alert(\"Floating button clicked!\");\n  };\n\n  var GoingBack = function GoingBack() {\n    return _jsx(TouchableOpacity, {\n      style: styles.touchableOpacity,\n      onPress: clickHandler,\n      children: _jsx(Image, {\n        style: styles.floatingButton,\n        source: require(\"../assets/pil.png\")\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {}), _jsx(FlashcardContainer, {}), _jsx(BottomText, {}), _jsx(GoingBack, {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#4C97FF\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    width: \"100%\",\n    height: \"15%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  titleStyle: {\n    color: \"#F8A839\",\n    fontFamily: \"American-Typewriter\",\n    fontSize: 80,\n    padding: 30\n  },\n  boxContainer: {\n    width: \"100%\",\n    height: \"50%\",\n    backgroundColor: \"white\",\n    padding: 5,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  },\n  flashcardStyle: {\n    width: 300,\n    height: 200,\n    backgroundColor: \"#0B8D69\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backfaceVisibility: \"hidden\"\n  },\n  textStyle: {\n    color: \"#F8A839\",\n    fontFamily: \"American-Typewriter\",\n    fontSize: 30\n  },\n  backsideStyle: {\n    backgroundColor: \"black\",\n    position: \"absolute\",\n    top: 0\n  },\n  touchStyle: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  touchableOpacity: {\n    position: \"absolute\",\n    width: 80,\n    height: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    left: 30,\n    bottom: 30\n  },\n  floatingButton: {\n    resizeMode: \"contain\",\n    width: 80,\n    height: 80\n  }\n});\nexport default FlashcardView;","map":{"version":3,"sources":["/Users/daniel/Min_Kandmapp/FlashcardsApp/screens/FlashcardView.tsx"],"names":["React","FlashcardView","animatedValue","Animated","Value","currentValue","addListener","value","flipCard","spring","toValue","friction","tension","useNativeDriver","start","frontInterpolate","interpolate","inputRange","outputRange","backInterpolate","Header","styles","header","titleStyle","BottomText","FlashcardContainer","boxContainer","touchStyle","flashcardStyle","transform","rotateY","textStyle","backsideStyle","clickHandler","alert","GoingBack","touchableOpacity","floatingButton","require","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","color","fontFamily","fontSize","padding","flexDirection","flexWrap","alignContent","backfaceVisibility","position","top","left","bottom","resizeMode"],"mappings":"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","sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Image,\n} from \"react-native\";\nimport React, { useState } from \"react\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst FlashcardView = () => {\n  let animatedValue = new Animated.Value(0);\n  let currentValue = 0;\n\n  animatedValue.addListener(({ value }) => {\n    currentValue = value;\n  });\n\n  const flipCard = () => {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        friction: 8,\n        tension: 10,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        friction: 8,\n        tension: 10,\n        useNativeDriver: false,\n      }).start();\n    }\n  };\n\n  const frontInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: [\"0deg\", \"180deg\"],\n  });\n  const backInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: [\"180deg\", \"360deg\"],\n  });\n\n  const Header = () => {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.titleStyle}>Vad blir</Text>\n      </View>\n    );\n  };\n\n  const BottomText = () => {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.titleStyle}>i kod?</Text>\n      </View>\n    );\n  };\n\n  const FlashcardContainer = () => {\n    return (\n      <View style={styles.boxContainer}>\n        <TouchableOpacity style={styles.touchStyle} onPress={flipCard}>\n          <View>\n            <Animated.View\n              style={[\n                styles.flashcardStyle,\n                { transform: [{ rotateY: frontInterpolate }] },\n              ]}\n            >\n              <Text style={styles.textStyle}>This is the frontside</Text>\n            </Animated.View>\n\n            <Animated.View\n              style={[\n                styles.flashcardStyle,\n                styles.backsideStyle,\n                { transform: [{ rotateY: backInterpolate }] },\n              ]}\n            >\n              <Text style={styles.textStyle}>This is the backside</Text>\n            </Animated.View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const clickHandler = () => {\n    alert(\"Floating button clicked!\");\n  };\n\n  const GoingBack = () => {\n    return (\n      <TouchableOpacity style={styles.touchableOpacity} onPress={clickHandler}>\n        <Image\n          style={styles.floatingButton}\n          source={require(\"../assets/pil.png\")}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <FlashcardContainer />\n      <BottomText />\n      <GoingBack />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#4C97FF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    width: \"100%\",\n    height: \"15%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  titleStyle: {\n    color: \"#F8A839\",\n    fontFamily: \"American-Typewriter\",\n    fontSize: 80,\n    padding: 30,\n  },\n  boxContainer: {\n    width: \"100%\",\n    height: \"50%\",\n    backgroundColor: \"white\",\n    padding: 5,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n  },\n  flashcardStyle: {\n    width: 300,\n    height: 200,\n    backgroundColor: \"#0B8D69\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backfaceVisibility: \"hidden\",\n  },\n  textStyle: {\n    color: \"#F8A839\",\n    fontFamily: \"American-Typewriter\",\n    fontSize: 30,\n  },\n  backsideStyle: {\n    backgroundColor: \"black\",\n    position: \"absolute\",\n    top: 0,\n  },\n  touchStyle: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  touchableOpacity: {\n    position: \"absolute\",\n    width: 80,\n    height: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    left: 30,\n    bottom: 30,\n  },\n  floatingButton: {\n    resizeMode: \"contain\",\n    width: 80,\n    height: 80,\n  },\n});\n\nexport default FlashcardView;\n"]},"metadata":{},"sourceType":"module"}