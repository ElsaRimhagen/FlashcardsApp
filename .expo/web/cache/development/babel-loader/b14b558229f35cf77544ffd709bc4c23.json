{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar StartingScreen = function StartingScreen() {\n  var rotateValueHolder = new Animated.Value(0);\n\n  var startImageRotationFunction = function startImageRotationFunction() {\n    rotateValueHolder.setValue(0);\n    Animated.timing(rotateValueHolder, {\n      toValue: 1,\n      duration: 3000,\n      easing: Easing.quad,\n      useNativeDriver: false\n    }).start(function () {\n      return startImageRotationFunction();\n    });\n  };\n\n  var RotateData = rotateValueHolder.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"360deg\", \"0deg\"]\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: startImageRotationFunction,\n        children: _jsx(Animated.Image, {\n          source: require(\"../assets/scratch_cat.png\"),\n          style: [styles.logo, {\n            transform: [{\n              rotate: RotateData\n            }]\n          }]\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#4C97FF\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"#4c94fc\",\n    fontWeight: \"bold\",\n    fontSize: 100\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: \"stretch\"\n  }\n});\nexport default StartingScreen;","map":{"version":3,"sources":["/Users/daniel/Min_Kandmapp/FlashcardsApp/screens/StartingScreen.tsx"],"names":["React","StartingScreen","rotateValueHolder","Animated","Value","startImageRotationFunction","setValue","timing","toValue","duration","easing","Easing","quad","useNativeDriver","start","RotateData","interpolate","inputRange","outputRange","styles","container","require","logo","transform","rotate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","text","color","fontWeight","fontSize","width","height","resizeMode"],"mappings":";;;;;AAOA,OAAOA,KAAP,MAAgC,OAAhC;;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAIC,iBAAiB,GAAG,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAxB;;AACA,MAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACvCH,IAAAA,iBAAiB,CAACI,QAAlB,CAA2B,CAA3B;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,iBAAhB,EAAmC;AACjCM,MAAAA,OAAO,EAAE,CADwB;AAEjCC,MAAAA,QAAQ,EAAE,IAFuB;AAGjCC,MAAAA,MAAM,EAAEC,MAAM,CAACC,IAHkB;AAIjCC,MAAAA,eAAe,EAAE;AAJgB,KAAnC,EAMGC,KANH,CAMS;AAAA,aAAMT,0BAA0B,EAAhC;AAAA,KANT;AAOD,GATD;;AAWA,MAAMU,UAAU,GAAGb,iBAAiB,CAACc,WAAlB,CAA8B;AAC/CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADmC;AAE/CC,IAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,MAAX;AAFkC,GAA9B,CAAnB;AAKA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,IAAD;AAAA,gBACE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEf,0BAA3B;AAAA,kBACE,KAAC,QAAD,CAAU,KAAV;AACE,UAAA,MAAM,EAAEgB,OAAO,6BADjB;AAEE,UAAA,KAAK,EAAE,CAACF,MAAM,CAACG,IAAR,EAAc;AAAEC,YAAAA,SAAS,EAAE,CAAC;AAAEC,cAAAA,MAAM,EAAET;AAAV,aAAD;AAAb,WAAd;AAFT;AADF;AADF;AADF,IADF;AAYD,CA9BD;;AAiCA,IAAMI,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAPyB;AAY/BZ,EAAAA,IAAI,EAAE;AACJa,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,UAAU,EAAE;AAHR;AAZyB,CAAlB,CAAf;AAmBA,eAAepC,cAAf","sourcesContent":["import {\n  Animated,\n  View,\n  StyleSheet,\n  Easing,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { useState } from \"react\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst StartingScreen = () => {\n  let rotateValueHolder = new Animated.Value(0);\n  const startImageRotationFunction = () => {\n    rotateValueHolder.setValue(0);\n    Animated.timing(rotateValueHolder, {\n      toValue: 1,\n      duration: 3000,\n      easing: Easing.quad,\n      useNativeDriver: false,\n      // }).start () --> om bara snurra en gÃ¥ng\n    }).start(() => startImageRotationFunction());\n  };\n\n  const RotateData = rotateValueHolder.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"360deg\", \"0deg\"],\n  });\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <TouchableOpacity onPress={startImageRotationFunction}>\n          <Animated.Image\n            source={require(\"../assets/scratch_cat.png\")}\n            style={[styles.logo, { transform: [{ rotate: RotateData }] }]}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n// onLoadStart={() => this.setState({loading: true})}?\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#4C97FF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"#4c94fc\",\n    fontWeight: \"bold\",\n    fontSize: 100,\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: \"stretch\",\n  },\n});\n\nexport default StartingScreen;\n"]},"metadata":{},"sourceType":"module"}